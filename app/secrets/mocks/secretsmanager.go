// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"context"
	"sync"

	"github.com/aws/aws-sdk-go-v2/service/secretsmanager"
)

// SectretsManagerClient is a mock implementation of secrets.secretsmanagerClient.
//
//	func TestSomethingThatUsessecretsmanagerClient(t *testing.T) {
//
//		// make and configure a mocked secrets.secretsmanagerClient
//		mockedsecretsmanagerClient := &SectretsManagerClient{
//			GetSecretValueFunc: func(ctx context.Context, params *secretsmanager.GetSecretValueInput, optFns ...func(*secretsmanager.Options)) (*secretsmanager.GetSecretValueOutput, error) {
//				panic("mock out the GetSecretValue method")
//			},
//		}
//
//		// use mockedsecretsmanagerClient in code that requires secrets.secretsmanagerClient
//		// and then make assertions.
//
//	}
type SectretsManagerClient struct {
	// GetSecretValueFunc mocks the GetSecretValue method.
	GetSecretValueFunc func(ctx context.Context, params *secretsmanager.GetSecretValueInput, optFns ...func(*secretsmanager.Options)) (*secretsmanager.GetSecretValueOutput, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetSecretValue holds details about calls to the GetSecretValue method.
		GetSecretValue []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// Params is the params argument value.
			Params *secretsmanager.GetSecretValueInput
			// OptFns is the optFns argument value.
			OptFns []func(*secretsmanager.Options)
		}
	}
	lockGetSecretValue sync.RWMutex
}

// GetSecretValue calls GetSecretValueFunc.
func (mock *SectretsManagerClient) GetSecretValue(ctx context.Context, params *secretsmanager.GetSecretValueInput, optFns ...func(*secretsmanager.Options)) (*secretsmanager.GetSecretValueOutput, error) {
	if mock.GetSecretValueFunc == nil {
		panic("SectretsManagerClient.GetSecretValueFunc: method is nil but secretsmanagerClient.GetSecretValue was just called")
	}
	callInfo := struct {
		Ctx    context.Context
		Params *secretsmanager.GetSecretValueInput
		OptFns []func(*secretsmanager.Options)
	}{
		Ctx:    ctx,
		Params: params,
		OptFns: optFns,
	}
	mock.lockGetSecretValue.Lock()
	mock.calls.GetSecretValue = append(mock.calls.GetSecretValue, callInfo)
	mock.lockGetSecretValue.Unlock()
	return mock.GetSecretValueFunc(ctx, params, optFns...)
}

// GetSecretValueCalls gets all the calls that were made to GetSecretValue.
// Check the length with:
//
//	len(mockedsecretsmanagerClient.GetSecretValueCalls())
func (mock *SectretsManagerClient) GetSecretValueCalls() []struct {
	Ctx    context.Context
	Params *secretsmanager.GetSecretValueInput
	OptFns []func(*secretsmanager.Options)
} {
	var calls []struct {
		Ctx    context.Context
		Params *secretsmanager.GetSecretValueInput
		OptFns []func(*secretsmanager.Options)
	}
	mock.lockGetSecretValue.RLock()
	calls = mock.calls.GetSecretValue
	mock.lockGetSecretValue.RUnlock()
	return calls
}
